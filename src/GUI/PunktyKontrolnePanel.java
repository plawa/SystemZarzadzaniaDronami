/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import controllers.DatabaseController;
import database.Drony;
import database.PunktyKontrolne;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Piotrek
 */
public class PunktyKontrolnePanel extends javax.swing.JPanel {

    public PunktyKontrolnePanel() {
        initComponents();
        kontroler = new DatabaseController();
        initializeCombobox();
    }

    private void initializeCombobox(){
        List<Drony> drony = kontroler.getAllDrony();
        String [] nazwyDronow = new String[drony.size()];
        for (int i = 0; i < drony.size(); i++){
            String nazwa = "brak parametrów";
            if (drony.get(i).getParametryDronow() != null)
                nazwa = drony.get(i).getParametryDronow().getModel();
            nazwyDronow[i] = drony.get(i).getId() + ". " + nazwa;
        }
        jComboBox.setModel(new javax.swing.DefaultComboBoxModel(nazwyDronow));
        jComboBox.setSelectedIndex(0);
    }
    
    private void fulfillTable(Drony dron){
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        model.setRowCount(0);
        List<PunktyKontrolne> punktyKontrolneDrona = kontroler.getPunktyKontrolneDrona(dron);
        for (PunktyKontrolne punkt : punktyKontrolneDrona){
            model.addRow(new Object[]{punkt.getLatitude(), punkt.getLongitude(),
                punkt.getAttitude(), punkt.getCzyOsiagnieto()!=0, punkt.getCzasWyznaczenia()});
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jComboBox = new javax.swing.JComboBox();

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Długość geogr.", "Szerokość geogr.", "Wysokość", "Osiągnięty", "Wyznaczono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(3).setPreferredWidth(40);
            jTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--błąd inicjalizacji--" }));
        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed
        //wczytuje punkty kontrolne przyporządkowane do wybranego w comboBoxie drona
        Drony dron = kontroler.getDron(jComboBox.getSelectedIndex());
        fulfillTable(dron);
    }//GEN-LAST:event_jComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
    private DatabaseController kontroler;
}
